#
# Navigation config
#

navigation = {
	"New" = {
		"displayName" = _("New"),
		"default" = { module = objects/cataloguing, controller = Basic, action = Edit },
		"breadcrumbHints" = {
			parameter:object_id = _("Edit"),
			parameter:lot_id = _("Edit"),
			parameter:entity_id = _("Edit"),
			parameter:place_id = _("Edit"),
			parameter:occurrence_id = _("Edit"),
			parameter:collection_id = _("Edit"),
			parameter:location_id = _("Edit"),
			parameter:representation_id = _("Edit"),
			parameter:annotation_id = _("Edit"),
			parameter:loan_id = _("Edit"),
			parameter:movement_id = _("Edit")
		},
		"requires" = {
			action:can_create_ca_object_lots = OR,
			action:can_create_ca_objects = OR,
			action:can_create_ca_entities = OR,
			action:can_create_ca_places = OR,
			action:can_create_ca_collections = OR,
			action:can_create_ca_occurrences = OR,
			action:can_create_ca_storage_locations = OR,
			action:can_create_ca_loans = OR,
			action:can_create_ca_movements = OR
		},
		"navigation" = {
 			"lots" = {
 				"displayName" = _("Lot"),
 				"default" = { module = editor/object_lots, controller = ObjectLotEditor, action = Edit },
 				"requires" = {
 					action:can_create_ca_object_lots = AND,
 					configuration:!ca_object_lots_disable = AND
 				},
 				"submenu" = {
					"type" = dynamic,
					"handler" = { module = editor/object_lots, controller = ObjectLotEditor, action = _genTypeNav },
					"breadcrumbHints" = {
						parameter:lot_id = method:ca_object_lots.getTypeName,
						parameter:type_id = method:ca_list_items.getLabelForDisplay,
					}
				},
				"navigation" = {
					"dynamic" = {
						"type" = dynamic,
						"handler" = { module = editor/object_lots, controller = ObjectLotEditor, action = _genDynamicNav },
						"default" = { module = editor/object_lots, controller = ObjectLotEditor, action = Edit },
						"requires" = {
							action:can_edit_ca_object_lots = AND
						}
						"parameters" = {
							parameter:lot_id = 
						},
						"hideIfNoAccess" = 1
					},
					"summary" = {
						"displayName" = _("Summary"),
						"default" = { module = editor/object_lots, controller = ObjectLotEditor, action = Summary },
						"requires" = {
							parameter:lot_id = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:lot_id = 
						}
					},
					"log" = {
						"displayName" = _("Log"),
						"default" = { module = editor/object_lots, controller = ObjectLotEditor, action = Log },
						"requires" = {
							parameter:lot_id = AND,
							action:can_edit_ca_object_lots = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:lot_id = 
						},
						"hideIfNoAccess" = 1
					}
				}
 			},
			"objects" = {
				"displayName" = _("Object"),
				"default" = { module = editor/objects, controller = ObjectEditor, action = Edit },
				"requires" = {
					action:can_create_ca_objects = AND,
					configuration:!ca_objects_disable = AND
				},
				"submenu" = {
					"type" = dynamic,
					"handler" = { module = editor/objects, controller = ObjectEditor, action = _genTypeNav },
					"breadcrumbHints" = {
						parameter:object_id = method:ca_objects.getTypeName,
						parameter:type_id = method:ca_list_items.getLabelForDisplay,
					}
				},
				"navigation" = {
					"dynamic" = {
						"type" = dynamic,
						"handler" = { module = editor/objects, controller = ObjectEditor, action = _genDynamicNav },
						"default" = { module = editor/objects, controller = ObjectEditor, action = Edit },
						"requires" = {
							action:can_edit_ca_objects = AND
						},
						"parameters" = {
							parameter:object_id = 
						},
						"hideIfNoAccess" = 1
					},
					"summary" = {
						"displayName" = _("Summary"),
						"default" = { module = editor/objects, controller = ObjectEditor, action = Summary },
						"requires" = {
							parameter:object_id = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:object_id = 
						}
					},
					"log" = {
						"displayName" = _("Log"),
						"default" = { module = editor/objects, controller = ObjectEditor, action = Log },
						"requires" = {
							parameter:object_id = AND,
							action:can_edit_ca_objects = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:object_id = 
						},
						"hideIfNoAccess" = 1
					}
				}
			},
 			"entities" = {
 				"displayName" = _("Entity"),
 				"default" = { module = editor/entities, controller = EntityEditor, action = Edit },
 				"requires" = {
 					action:can_create_ca_entities = AND,
 					configuration:!ca_entities_disable = AND
 				},
				"submenu" = {
					"type" = dynamic,
					"handler" = { module = editor/entities, controller = EntityEditor, action = _genTypeNav },
					"breadcrumbHints" = {
						parameter:entity_id = method:ca_entities.getTypeName,
						parameter:type_id = method:ca_list_items.getLabelForDisplay,
					}
				},
 				"navigation" = {
					"dynamic" = {
						"type" = dynamic,
						"handler" = { module = editor/entities, controller = EntityEditor, action = _genDynamicNav },
						"default" = { module = editor/entities, controller = EntityEditor, action = Edit },
						"requires" = {
							action:can_edit_ca_entities = AND
						}
						"parameters" = {
							parameter:entity_id = 
						},
						"hideIfNoAccess" = 1
					},
					"summary" = {
						"displayName" = _("Summary"),
						"default" = { module = editor/entities, controller = EntityEditor, action = Summary },
						"requires" = {
							parameter:entity_id = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:entity_id = 
						}
					},
					"log" = {
						"displayName" = _("Log"),
						"default" = { module = editor/entities, controller = EntityEditor, action = Log },
						"requires" = {
							parameter:entity_id = AND,
							action:can_edit_ca_entities = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:entity_id = 
						},
						"hideIfNoAccess" = 1
					}
				}
 			},
 			"places" = {
 				"displayName" = _("Place"),
 				"default" = { module = find, controller = SearchPlaces, action = ViewHierarchy },
				"useActionInPath" = 1,
 				"requires" = {
 					action:can_create_ca_places = AND,
 					configuration:!ca_places_disable = AND
 				}
 			}
 			"place_editor" = {
 				"displayName" = _("Place editor"),
 				"hide" = 1,
 				"default" = { module = editor/places, controller = PlaceEditor, action = Edit },
 				"requires" = {
 					
 				},
 				"breadcrumbHints" = {
					parameter:place_id = method:ca_places.getTypeName,
					parameter:type_id = method:ca_list_items.getLabelForDisplay,
				},
 				"navigation" = {
					"dynamic" = {
						"type" = dynamic,
						"handler" = { module = editor/places, controller = PlaceEditor, action = _genDynamicNav },
						"default" = { module = editor/places, controller = PlaceEditor, action = Edit },
						"requires" = {
							action:can_edit_ca_places = AND
						}
						"parameters" = {
							parameter:place_id = 
						},
						"hideIfNoAccess" = 1
					},
					"summary" = {
						"displayName" = _("Summary"),
						"default" = { module = editor/places, controller = PlaceEditor, action = Summary },
						"requires" = {
							parameter:place_id = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:place_id = 
						}
					},
					"log" = {
						"displayName" = _("Log"),
						"default" = { module = editor/places, controller = PlaceEditor, action = Log },
						"requires" = {
							parameter:place_id = AND,
							action:can_edit_ca_places = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:place_id = 
						},
						"hideIfNoAccess" = 1
					}
				}
 			},
 			"collection" = {
 				"displayName" = _("Collection"),
 				"default" = { module = editor/collections, controller = CollectionEditor, action = Edit },
 				"requires" = {
 					action:can_create_ca_collections = AND,
 					configuration:!ca_collections_disable = AND
 				},
 				"submenu" = {
					"type" = dynamic,
					"handler" = { module = editor/collections, controller = CollectionEditor, action = _genTypeNav },
					"breadcrumbHints" = {
						parameter:collection_id = method:ca_collections.getTypeName,
						parameter:type_id = method:ca_list_items.getLabelForDisplay,
					}
				},
 				"navigation" = {
					"dynamic" = {
						"type" = dynamic,
						"handler" = { module = editor/collections, controller = CollectionEditor, action = _genDynamicNav },
						"default" = { module = editor/collections, controller = CollectionEditor, action = Edit },
						"requires" = {
							action:can_edit_ca_collections = AND
						}
						"parameters" = {
							parameter:collection_id = 
						},
						"hideIfNoAccess" = 1
					},
					"summary" = {
						"displayName" = _("Summary"),
						"default" = { module = editor/collections, controller = CollectionEditor, action = Summary },
						"requires" = {
							parameter:collection_id = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:collection_id = 
						}
					},
					"log" = {
						"displayName" = _("Log"),
						"default" = { module = editor/collections, controller = CollectionEditor, action = Log },
						"requires" = {
							parameter:collection_id = AND,
							action:can_edit_ca_collections = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:collection_id = 
						},
						"hideIfNoAccess" = 1
					}
				}
 			},
 			"occurrences_editor" = {
 				"displayName" = _("Occurrences"),
 				"hide" = 1,
 				"default" = { module = editor/occurrences, controller = OccurrenceEditor, action = Edit },
 				"requires" = {
					action:can_create_ca_occurrences = AND,
 					configuration:!ca_occurrences_disable = AND
 				},
				"submenu" = {
					"type" = dynamic,
					"handler" = { module = editor/occurrences, controller = OccurrenceEditor, action = _genTypeNav },
					"breadcrumbHints" = {
						parameter:occurrence_id = method:ca_occurrences.getTypeName,
						parameter:type_id = method:ca_list_items.getLabelForDisplay,
					}
				},
 				"navigation" = {
					"dynamic" = {
						"type" = dynamic,
						"handler" = { module = editor/occurrences, controller = OccurrenceEditor, action = _genDynamicNav },
						"default" = { module = editor/occurrences, controller = OccurrenceEditor, action = Edit },
						"requires" = {
							action:can_edit_ca_occurrences = AND
						}
						"parameters" = {
							parameter:occurrence_id = 
						},
						"hideIfNoAccess" = 1
					},
					"summary" = {
						"displayName" = _("Summary"),
						"default" = { module = editor/occurrences, controller = OccurrenceEditor, action = Summary },
						"requires" = {
							parameter:occurrence_id = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:occurrence_id = 
						}
					},
					"log" = {
						"displayName" = _("Log"),
						"default" = { module = editor/occurrences, controller = OccurrenceEditor, action = Log },
						"requires" = {
							action:can_edit_ca_occurrences = AND,
							parameter:occurrence_id = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:occurrence_id = 
						},
						"hideIfNoAccess" = 1
					}
				}
 			},			
 			"occurrences_dynamic" = {
 				"type" = dynamic,
				"handler" = { module = editor/occurrences, controller = OccurrenceEditor, action = _genTypeNav },
				"default" = { module = editor/occurrences, controller = OccurrenceEditor, action = Edit },
				"requires" = {
					configuration:!ca_occurrences_disable = AND,
					action:can_create_ca_occurrences = AND,
				}
				"parameters" = {
				
				}
 			},
 			"storage_locations" = {
 				"displayName" = _("Storage location"),
 				"default" = { module = find, controller = SearchStorageLocations, action = ViewHierarchy },
 				"useActionInPath" = 1,
 				"requires" = {
 					action:can_create_ca_storage_locations = AND,
 					configuration:!ca_storage_locations_disable = AND
 				}
 			},
 			"storage_location_editor" = {
 				"displayName" = _("Storage location editor"),
 				"hide" = 1,
 				"default" = { module = editor/storage_locations, controller = StorageLocationEditor, action = Edit },
 				"requires" = {
 					action:can_create_ca_storage_locations = AND,
 				},
 				"breadcrumbHints" = {
					parameter:location_id = method:ca_storage_locations.getTypeName,
					parameter:type_id = method:ca_list_items.getLabelForDisplay,
				},
 				"navigation" = {
					"dynamic" = {
						"type" = dynamic,
						"handler" = { module = editor/storage_locations, controller = StorageLocationEditor, action = _genDynamicNav },
						"default" = { module = editor/storage_locations, controller = StorageLocationEditor, action = Edit },
						"requires" = {
							action:can_edit_ca_storage_locations = AND,
						}
						"parameters" = {
							parameter:location_id = 
						},
						"hideIfNoAccess" = 1
					},
					"summary" = {
						"displayName" = _("Summary"),
						"default" = { module = editor/storage_locations, controller = StorageLocationEditor, action = Summary },
						"requires" = {
							parameter:location_id = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:location_id = 
						}
					},
					"log" = {
						"displayName" = _("Log"),
						"default" = { module = editor/storage_locations, controller = StorageLocationEditor, action = Log },
						"requires" = {
							parameter:location_id = AND,
							action:can_edit_ca_storage_locations = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:location_id = 
						},
						"hideIfNoAccess" = 1
					}
				}
 			},
 			"object_representations" = {
 				"displayName" = _("Object representations"),
 				"hide" = 1,
 				"default" = { module = editor/object_representations, controller = ObjectRepresentationEditor, action = Edit },
 				"requires" = {
 					
 				},
 				"breadcrumbHints" = {
					parameter:representation_id = method:ca_object_representations.getTypeName,
					parameter:type_id = method:ca_list_items.getLabelForDisplay,
				},
 				"navigation" = {
					"dynamic" = {
						"type" = dynamic,
						"handler" = { module = editor/object_representations, controller = ObjectRepresentationEditor, action = _genDynamicNav },
						"default" = { module = editor/object_representations, controller = ObjectRepresentationEditor, action = Edit },
						"requires" = {
							action:can_edit_ca_objects = AND
						},
						"parameters" = {
							parameter:representation_id = 
						},
						"hideIfNoAccess" = 1
					},
					"summary" = {
						"displayName" = _("Summary"),
						"default" = { module = editor/object_representations, controller = ObjectRepresentationEditor, action = Summary },
						"requires" = {
							parameter:representation_id = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:representation_id = 
						}
					},
					"log" = {
						"displayName" = _("Log"),
						"default" = { module = editor/object_representations, controller = ObjectRepresentationEditor, action = Log },
						"requires" = {
							parameter:representation_id = AND,
							action:can_edit_ca_objects = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:representation_id = 
						},
						"hideIfNoAccess" = 1
					}
				}
 			},
 			"loans" = {
 				"displayName" = _("Loan"),
 				"default" = { module = editor/loans, controller = LoanEditor, action = Edit },
 				"requires" = {
 					action:can_create_ca_loans = AND,
 					configuration:!ca_loans_disable = AND
 				},
				"submenu" = {
					"type" = dynamic,
					"handler" = { module = editor/loans, controller = LoanEditor, action = _genTypeNav },
					"breadcrumbHints" = {
						parameter:loan_id = method:ca_loans.getTypeName,
						parameter:type_id = method:ca_list_items.getLabelForDisplay,
					}
				},
 				"navigation" = {
					"dynamic" = {
						"type" = dynamic,
						"handler" = { module = editor/loans, controller = LoanEditor, action = _genDynamicNav },
						"default" = { module = editor/loans, controller = LoanEditor, action = Edit },
						"requires" = {
							action:can_edit_ca_loans = AND
						}
						"parameters" = {
							parameter:loan_id = 
						},
						"hideIfNoAccess" = 1
					},
					"summary" = {
						"displayName" = _("Summary"),
						"default" = { module = editor/loans, controller = LoanEditor, action = Summary },
						"requires" = {
							parameter:loan_id = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:loan_id = 
						}
					},
					"log" = {
						"displayName" = _("Log"),
						"default" = { module = editor/loans, controller = LoanEditor, action = Log },
						"requires" = {
							parameter:loan_id = AND,
							action:can_edit_ca_loans = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:loan_id = 
						},
						"hideIfNoAccess" = 1
					}
				}
 			},
 			"movements" = {
 				"displayName" = _("Movement"),
 				"default" = { module = editor/movements, controller = MovementEditor, action = Edit },
 				"requires" = {
 					action:can_create_ca_movements = AND,
 					configuration:!ca_movements_disable = AND
 				},
				"submenu" = {
					"type" = dynamic,
					"handler" = { module = editor/movements, controller = MovementEditor, action = _genTypeNav },
					"breadcrumbHints" = {
						parameter:movement_id = method:ca_movements.getTypeName,
						parameter:type_id = method:ca_list_items.getLabelForDisplay,
					}
				},
 				"navigation" = {
					"dynamic" = {
						"type" = dynamic,
						"handler" = { module = editor/movements, controller = MovementEditor, action = _genDynamicNav },
						"default" = { module = editor/movements, controller = MovementEditor, action = Edit },
						"requires" = {
							action:can_edit_ca_movements = AND
						}
						"parameters" = {
							parameter:movement_id = 
						},
						"hideIfNoAccess" = 1
					},
					"summary" = {
						"displayName" = _("Summary"),
						"default" = { module = editor/movements, controller = MovementEditor, action = Summary },
						"requires" = {
							parameter:movement_id = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:movement_id = 
						}
					},
					"log" = {
						"displayName" = _("Log"),
						"default" = { module = editor/movements, controller = MovementEditor, action = Log },
						"requires" = {
							parameter:movement_id = AND,
							action:can_edit_ca_movements = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:movement_id = 
						},
						"hideIfNoAccess" = 1
					}
				}
 			},
 			"representation_annotations" = {
 				"displayName" = _("Representation annotations"),
 				"hide" = 1,
 				"default" = { module = editor/representation_annotations, controller = RepresentationAnnotationEditor, action = Edit },
 				"requires" = {
 					
 				},
				#"submenu" = {
				#	"type" = dynamic,
				#	"handler" = { module = editor/representation_annotations, controller = RepresentationAnnotationEditor, action = _genTypeNav }
				#},
 				"navigation" = {
					"dynamic" = {
						"type" = dynamic,
						"handler" = { module = editor/representation_annotations, controller = RepresentationAnnotationEditor, action = _genDynamicNav },
						"default" = { module = editor/representation_annotations, controller = RepresentationAnnotationEditor, action = Edit },
						"requires" = {
							action:can_edit_ca_objects = AND
						}
						"parameters" = {
							parameter:annotation_id = 
						},
						"hideIfNoAccess" = 1
					},
					"summary" = {
						"displayName" = _("Summary"),
						"default" = { module = editor/representation_annotations, controller = RepresentationAnnotationEditor, action = Summary },
						"requires" = {
							parameter:annotation_id = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:annotation_id = 
						}
					},
					"log" = {
						"displayName" = _("Log"),
						"default" = { module = editor/representation_annotations, controller = RepresentationAnnotationEditor, action = Log },
						"requires" = {
							parameter:annotation_id = AND,
							action:can_edit_ca_objects = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:annotation_id = 
						},
						"hideIfNoAccess" = 1
					}
				}
 			}
		}
	},
	"find" = {
		"displayName" = _("Find"),
		"default" = { module = find, controller = SearchObjects, action = Index },
		"requires" = {
			action:can_search_ca_object_lots = OR,
			action:can_browse_ca_object_lots = OR,
			action:can_search_ca_objects = OR,
			action:can_browse_ca_objects = OR,
			action:can_search_ca_entities = OR,
			action:can_browse_ca_entities = OR,
			action:can_search_ca_places = OR,
			action:can_browse_ca_places = OR,
			action:can_search_ca_collections = OR,
			action:can_browse_ca_collections = OR,
			action:can_search_ca_occurrences = OR,
			action:can_browse_ca_occurrences = OR,
			action:can_search_ca_storage_locations = OR,
			action:can_browse_ca_storage_locations = OR,
			action:can_search_ca_loans = OR,
			action:can_browse_ca_loans = OR,
			action:can_search_ca_movements = OR,
			action:can_browse_ca_movements = OR,
			action:can_search = OR,
			action:can_browse = OR,
		},
		"navigation" = {
			"object_lots" = {
				"displayName" = _("Lots"),
				"default" = { module = find, controller = SearchObjectLots, action = Index},
				"requires" = {
					action:can_search_ca_object_lots = OR,
					action:can_browse_ca_object_lots = OR,
					action:can_search = OR,
					action:can_browse = OR,
 					configuration:!ca_object_lots_disable = AND
				},
				"aliased_actions" => {
					modifyCriteria = Index
				},
				"remember_last_used_navigation" = 1,
				"navigation" = {
					"basic_search" = {
						"displayName" = _("Basic search"),
						"useActionInPath" = 1,
						"default" = { module = find, controller = SearchObjectLots, action = Index},
						"requires" = {
							action:can_search_ca_object_lots = OR,
							action:can_search = OR,
						}
					},
					"adv_search" = {
						"displayName" = _("Advanced search"),
						"useActionInPath" = 1,
						"default" = { module = find, controller = SearchObjectLotsAdvanced, action = Index},
						"requires" = {
							action:can_search_ca_object_lots = OR,
							action:can_search = OR,
							action:can_use_adv_search_forms = AND,
						},
						"aliased_actions" => {
							modifyCriteria = Index,
							doSavedSearch = Index
						}
					},
					"browse" = {
						"displayName" = _("Browse"),
						"default" = { module = find, controller = BrowseObjectLots, action = Index},
						"requires" = {
							action:can_browse_ca_object_lots = OR,
							action:can_browse = OR,
						}
					}
				}
			},
			"objects" = {
				"displayName" = _("Objects"),
				"default" = { module = find, controller = SearchObjects, action = Index},
				"requires" = {
					action:can_search_ca_objects = OR,
					action:can_browse_ca_objects = OR,
					action:can_search = OR,
					action:can_browse = OR,
 					configuration:!ca_objects_disable = AND
				},
				"aliased_actions" => {
					modifyCriteria = Index,
					doSavedSearch = Index
				},
				"remember_last_used_navigation" = 1,
				"navigation" = {
					"basic_search" = {
						"displayName" = _("Basic search"),
						"useActionInPath" = 1,
						"default" = { module = find, controller = SearchObjects, action = Index},
						"requires" = {
							action:can_search_ca_objects = OR,
							action:can_search = OR,
						}
					},
					"adv_search" = {
						"displayName" = _("Advanced search"),
						"useActionInPath" = 1,
						"default" = { module = find, controller = SearchObjectsAdvanced, action = Index},
						"requires" = {
							action:can_search_ca_objects = OR,
							action:can_search = OR,
							action:can_use_adv_search_forms = AND,
						},
						"aliased_actions" => {
							modifyCriteria = Index,
							doSavedSearch = Index
						}
					},
					"browse" = {
						"displayName" = _("Browse"),
						"default" = { module = find, controller = BrowseObjects, action = Index},
						"requires" = {
							action:can_browse_ca_objects = OR,
							action:can_browse = OR,
						}
					}
				}
			},
			"entities" = {
				"displayName" = _("Entities"),
				"default" = { module = find, controller = SearchEntities, action = Index},
				"requires" = {
					action:can_search_ca_entities = OR,
					action:can_browse_ca_entities = OR,
					action:can_search = OR,
					action:can_browse = OR,
 					configuration:!ca_entities_disable = AND
				},
				"aliased_actions" => {
					modifyCriteria = Index
				},
				"remember_last_used_navigation" = 1,
				"navigation" = {
					"search" = {
						"displayName" = _("Search"),
						"default" = { module = find, controller = SearchEntities, action = Index},
						"requires" = {
							action:can_search_ca_entities = OR,
							action:can_search = OR,
						}
					},
					"adv_search" = {
						"displayName" = _("Advanced search"),
						"useActionInPath" = 1,
						"default" = { module = find, controller = SearchEntitiesAdvanced, action = Index},
						"requires" = {
							action:can_search_ca_entities = OR,
							action:can_search = OR,
							action:can_use_adv_search_forms = AND,
						},
						"aliased_actions" => {
							modifyCriteria = Index,
							doSavedSearch = Index
						}
					},
					"browse" = {
						"displayName" = _("Browse"),
						"default" = { module = find, controller = BrowseEntities, action = Index},
						"requires" = {
							action:can_browse_ca_entities = OR,
							action:can_browse = OR,
						}
					}
				}
			},
			"places" = {
				"displayName" = _("Places"),
				"default" = { module = find, controller = SearchPlaces, action = Index},
				"requires" = {
					action:can_search_ca_places = OR,
					action:can_browse_ca_places = OR,
					action:can_search = OR,
					action:can_browse = OR,
 					configuration:!ca_places_disable = AND
				},
				"aliased_actions" => {
					modifyCriteria = Index
				},
				"remember_last_used_navigation" = 1,
				"navigation" = {
					"search" = {
						"displayName" = _("Search"),
						"default" = { module = find, controller = SearchPlaces, action = Index},
						"requires" = {
							action:can_search_ca_places = OR,
							action:can_search = OR,
						}
					},
					"adv_search" = {
						"displayName" = _("Advanced search"),
						"useActionInPath" = 1,
						"default" = { module = find, controller = SearchPlacesAdvanced, action = Index},
						"requires" = {
							action:can_search_ca_places = OR,
							action:can_search = OR,
							action:can_use_adv_search_forms = AND,
						},
						"aliased_actions" => {
							modifyCriteria = Index,
							doSavedSearch = Index
						}
					},
					"browse" = {
						"displayName" = _("Browse"),
						"default" = { module = find, controller = BrowsePlaces, action = Index},
						"requires" = {
							action:can_browse_ca_places = OR,
							action:can_browse = OR,
						}
					}
				}
			},
			"collections" = {
				"displayName" = _("Collections"),
				"default" = { module = find, controller = SearchCollections, action = Index},
				"requires" = {
					action:can_search_ca_collections = OR,
					action:can_browse_ca_collections = OR,
					action:can_search = OR,
					action:can_browse = OR,
 					configuration:!ca_collections_disable = AND
				},
				"aliased_actions" => {
					modifyCriteria = Index
				},
				"remember_last_used_navigation" = 1,
				"navigation" = {
					"search" = {
						"displayName" = _("Search"),
						"default" = { module = find, controller = SearchCollections, action = Index},
						"requires" = {
							action:can_search_ca_collections = OR,
							action:can_search = OR,
						}
					},
					"adv_search" = {
						"displayName" = _("Advanced search"),
						"useActionInPath" = 1,
						"default" = { module = find, controller = SearchCollectionsAdvanced, action = Index},
						"requires" = {
							action:can_search_ca_collections = OR,
							action:can_search = OR,
							action:can_use_adv_search_forms = AND,
						},
						"aliased_actions" => {
							modifyCriteria = Index,
							doSavedSearch = Index
						}
					},
					"browse" = {
						"displayName" = _("Browse"),
						"default" = { module = find, controller = BrowseCollections, action = Index},
						"requires" = {
							action:can_browse_ca_collections = OR,
							action:can_browse = OR,
						}
					}
				}
			},
			"occurrences_dynamic" = {
				"type" = dynamic,
				"handler" = { module = find, controller = SearchOccurrences, action = _genTypeNav },
				"default" = { module = find, controller = SearchOccurrences, action = Index },
				"requires" = {
					action:can_search_ca_occurrences = OR,
					action:can_browse_ca_occurrences = OR,
					action:can_search = OR,
					action:can_browse = OR,
 					configuration:!ca_occurrences_disable = AND
				},
				"aliased_actions" => {
					modifyCriteria = Index
				},
				"parameters" = {
					parameter:occurrence_id = ,
					parameter:type_id = 
				},
				"breadcrumbHints" = {
					parameter:type_id = method:ca_list_items.getLabelForDisplay,
				},
				"remember_last_used_navigation" = 1,
				"navigation" = {
					"search" = {
						"displayName" = _("Search"),
						"default" = { module = find, controller = SearchOccurrences, action = Index},
						"parameters" = {
							parameter:type_id = 
						},
						"requires" = {
							action:can_search_ca_occurrences = OR,
							action:can_search = OR,
						}
					},
					"adv_search" = {
						"displayName" = _("Advanced search"),
						"useActionInPath" = 1,
						"default" = { module = find, controller = SearchOccurrencesAdvanced, action = Index},
						"requires" = {
							action:can_search_ca_occurrences = OR,
							action:can_search = OR,
							action:can_use_adv_search_forms = AND,
						},
						"parameters" = {
							parameter:type_id = 
						},
						"aliased_actions" => {
							modifyCriteria = Index,
							doSavedSearch = Index
						}
					},
					"browse" = {
						"displayName" = _("Browse"),
						"default" = { module = find, controller = BrowseOccurrences, action = Index},
						"requires" = {
							action:can_browse_ca_occurrences = OR,
							action:can_browse = OR,
						},
						"parameters" = {
							parameter:type_id = 
						}
					}
				}
 			},
			"storage_locations" = {
				"displayName" = _("Storage locations"),
				"default" = { module = find, controller = SearchStorageLocations, action = Index},
				"requires" = {
					action:can_search_ca_storage_locations = OR,
					action:can_browse_ca_storage_locations = OR,
					action:can_search = OR,
					action:can_browse = OR,
 					configuration:!ca_storage_locations_disable = AND
				},
				"aliased_actions" => {
					modifyCriteria = Index
				},
				"remember_last_used_navigation" = 1,
				"navigation" = {
					"search" = {
						"displayName" = _("Search"),
						"default" = { module = find, controller = SearchStorageLocations, action = Index},
						"requires" = {
							action:can_search_ca_storage_locations = OR,
							action:can_search = OR,
						}
					},
					"adv_search" = {
						"displayName" = _("Advanced search"),
						"useActionInPath" = 1,
						"default" = { module = find, controller = SearchStorageLocationsAdvanced, action = Index},
						"requires" = {
							action:can_search_ca_storage_locations = OR,
							action:can_search = OR,
							action:can_use_adv_search_forms = AND,
						},
						"aliased_actions" => {
							modifyCriteria = Index,
							doSavedSearch = Index
						}
					},
					"browse" = {
						"displayName" = _("Browse"),
						"default" = { module = find, controller = BrowseStorageLocations, action = Index},
						"requires" = {
							action:can_browse_ca_storage_locations = OR,
							action:can_browse = OR,
						}
					}
				}
			},
			"loans" = {
				"displayName" = _("Loans"),
				"default" = { module = find, controller = SearchLoans, action = Index},
				"requires" = {
					action:can_search_ca_loans = OR,
					action:can_browse_ca_loans = OR,
					action:can_search = OR,
					action:can_browse = OR,
 					configuration:!ca_loans_disable = AND
				},
				"aliased_actions" => {
					modifyCriteria = Index
				},
				"remember_last_used_navigation" = 1,
				"navigation" = {
					"search" = {
						"displayName" = _("Search"),
						"default" = { module = find, controller = SearchLoans, action = Index},
						"requires" = {
							action:can_search_ca_loans = OR,
							action:can_search = OR,
						}
					},
					"adv_search" = {
						"displayName" = _("Advanced search"),
						"useActionInPath" = 1,
						"default" = { module = find, controller = SearchLoansAdvanced, action = Index},
						"requires" = {
							action:can_search_ca_loans = OR,
							action:can_search = OR,
							action:can_use_adv_search_forms = AND,
						},
						"aliased_actions" => {
							modifyCriteria = Index,
							doSavedSearch = Index
						}
					},
					"browse" = {
						"displayName" = _("Browse"),
						"default" = { module = find, controller = BrowseLoans, action = Index},
						"requires" = {
							action:can_browse_ca_loans = OR,
							action:can_browse = OR,
						}
					}
				}
			},
			"movements" = {
				"displayName" = _("Movements"),
				"default" = { module = find, controller = SearchMovements, action = Index},
				"requires" = {
					action:can_search_ca_movements = OR,
					action:can_browse_ca_movements = OR,
					action:can_search = OR,
					action:can_browse = OR,
 					configuration:!ca_movements_disable = AND
				},
				"aliased_actions" => {
					modifyCriteria = Index
				},
				"remember_last_used_navigation" = 1,
				"navigation" = {
					"search" = {
						"displayName" = _("Search"),
						"default" = { module = find, controller = SearchMovements, action = Index},
						"requires" = {
							action:can_search_ca_movements = OR,
							action:can_search = OR,
						}
					},
					"adv_search" = {
						"displayName" = _("Advanced search"),
						"useActionInPath" = 1,
						"default" = { module = find, controller = SearchMovementsAdvanced, action = Index},
						"requires" = {
							action:can_search_ca_movements = OR,
							action:can_search = OR,
							action:can_use_adv_search_forms = AND,
						},
						"aliased_actions" => {
							modifyCriteria = Index,
							doSavedSearch = Index
						}
					},
					"browse" = {
						"displayName" = _("Browse"),
						"default" = { module = find, controller = BrowseMovements, action = Index},
						"requires" = {
							action:can_browse_ca_movements = OR,
							action:can_browse = OR,
						}
					}
				}
			},
			"QuickSearch" = {
				"displayName" = _("QuickSearch"),
				"hide" = 1,
				"default" = { module = find, controller = QuickSearch, action = Index},
				"requires" = {
					action:can_quicksearch = AND
				},
				"navigation" = {
					"search" = {
						"displayName" = _("QuickSearch Results"),
						"default" = { module = find, controller = QuickSearch, action = Index},
						"requires" = {
							
						}
					}
				}
			},
			"LastQuickSearch" = {
				"displayName" = _("Last QuickSearch"),
				"default" = { module = find, controller = QuickSearch, action = Index},
				"requires" = {
					action:can_quicksearch = AND,
					session:quick_search_last_search
				},
				"navigation" = {
				
				}
			}
		}
	},
	"manage" = {
		"displayName" = _("Manage"),
		"default" = { module = manage, controller = Set, action = ListSets},
		"requires" = {
			# we want "manage" to disappear if the user isn't allowed to do anything in this menu -> we need this long list
			action:can_set_preferences = OR,
			action:can_create_user_groups = OR,
			action:can_create_ca_bundle_displays = OR,
			action:can_edit_ca_bundle_displays = OR,
			action:can_delete_ca_bundle_displays = OR,
			action:can_manage_system_bundle_displays = OR,
			action:can_create_adv_search_forms = OR,
			action:can_edit_adv_search_forms = OR,
			action:can_delete_adv_search_forms = OR,
			action:can_manage_system_search_forms = OR,
			action:can_create_sets = OR,
			action:can_edit_sets = OR,
			action:can_delete_sets = OR,
			action:can_view_sets = OR,
			action:can_manage_user_tags = OR,
			action:can_manage_user_comments = OR,
			action:can_create_ca_lists = OR,
			action:can_edit_ca_lists = OR,
			action:can_delete_ca_lists = OR,
			action:can_set_access_control = OR,
			action:can_view_logs = OR,
			action:can_configure_user_interfaces = OR,
			action:can_configure_metadata_elements = OR,
			action:can_configure_relationship_types = OR,
			action:can_configure_locales = OR,
			action:can_view_configuration_check = OR,
			action:can_search = OR,
			action:can_quicksearch = OR,
		},
		"navigation" = {
			"preferences" = {
				"displayName" = _("My preferences"),
				"default" = { module = system, controller = Preferences, action = EditUIPrefs },
				"requires" = {
					action:can_set_preferences = AND
				},
				"navigation" = {
					"ui" = {
						"displayName" = _("User interface"),
						"default" = { module = system, controller = Preferences, action = EditUIPrefs },
						"useActionInPath" = 1,
						"requires" = {
							
						}
					},
					"cataloguing" = {
						"displayName" = _("Cataloguing"),
						"default" = { module = system, controller = Preferences, action = EditCataloguingPrefs },
						"useActionInPath" = 1,
						"requires" = {
							
						}
					},
					"media" = {
						"displayName" = _("Media"),
						"default" = { module = system, controller = Preferences, action = EditMediaPrefs },
						"useActionInPath" = 1,
						"requires" = {
							
						}
					},
					"units" = {
						"displayName" = _("Units of measurement"),
						"default" = { module = system, controller = Preferences, action = EditUnitsPrefs },
						"useActionInPath" = 1,
						"requires" = {
							
						}
					}
				}
			},
			"watched_items" = {
				"displayName" = _("My watched items"),
				"default" = { module = manage, controller = WatchedItems, action = ListItems},
				"requires" = {
					action:can_edit_ca_object_lots = OR,
					action:can_edit_ca_objects = OR,
					action:can_edit_ca_entities = OR,
					action:can_edit_ca_places = OR,
					action:can_edit_ca_collections = OR,
					action:can_edit_ca_occurrences = OR,
					action:can_edit_ca_storage_locations = OR,
				}
			},
			"user_groups" = {
				"displayName" = _("My project teams"),
				"default" = { module = manage, controller = Groups, action = ListGroups},
				"requires" = {
					action:can_create_user_groups = AND,
				}
			},
			"user_displays" = {
				"displayName" = _("My displays"),
				"default" = { module = manage, controller = BundleDisplays, action = ListDisplays},
				"requires" = {
					action:can_create_ca_bundle_displays = OR,
					action:can_edit_ca_bundle_displays = OR,
					action:can_delete_ca_bundle_displays = OR,
					action:can_manage_system_bundle_displays = OR,
				},
				"navigation" = {
					"dynamic" = {
						"type" = dynamic,
						"handler" = { module = manage/bundle_displays, controller = BundleDisplayEditor, action = _genDynamicNav },
						"default" = { module = manage/bundle_displays, controller = BundleDisplayEditor, action = Edit },
						"requires" = {
							
						}
						"parameters" = {
							parameter:display_id = 
						}
					},
					"log" = {
						"displayName" = _("Log"),
						"default" = { module = manage/bundle_displays, controller = BundleDisplayEditor, action = Log },
						"requires" = {

							parameter:display_id = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:display_id = 
						}
					}
				}
			},
			"sets" = {
				"displayName" = _("My sets"),
				"default" = { module = manage, controller = Set, action = ListSets},
				"requires" = {
					action:can_create_sets = OR,
					action:can_edit_sets = OR,
					action:can_delete_sets = OR,
					action:can_view_sets = OR,
				}
			},
			"set_editor" = {
				"displayName" = _("Edit set"),
				"hide" = 1,
				"default" = { module = manage/sets, controller = SetEditor, action = Edit},
				"requires" = {
					
				}
				"navigation" = {
					"dynamic" = {
						"type" = dynamic,
						"handler" = { module = manage/sets, controller = SetEditor, action = _genDynamicNav },
						"default" = { module = manage/sets, controller = SetEditor, action = Edit },
						"requires" = {
							
						}
						"parameters" = {
							parameter:set_id = 
						}
					},
					"log" = {
						"displayName" = _("Log"),
						"default" = { module = manage/sets, controller = SetEditor, action = Log },
						"requires" = {

							parameter:set_id = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:set_id = 
						}
					}
				}
			},
			"set_item_editor" = {
				"displayName" = _("Edit set item"),
				"hide" = 1,
				"default" = { module = manage/set_items, controller = SetItemEditor, action = Edit},
				"requires" = {
					
				}
				"navigation" = {
					"dynamic" = {
						"type" = dynamic,
						"handler" = { module = manage/set_items, controller = SetItemEditor, action = _genDynamicNav },
						"default" = { module = manage/set_items, controller = SetItemEditor, action = Edit },
						"requires" = {
							
						}
						"parameters" = {
							parameter:item_id = 
						}
					},
					"log" = {
						"displayName" = _("Log"),
						"default" = { module = manage/set_items, controller = SetItemEditor, action = Log },
						"requires" = {

							parameter:item_id = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:item_id = 
						}
					}
				}
			},
			"search_tools" = {
				"displayName" = _("Search tools"),
				"default" = { module = manage, controller = SearchForm, action = ListForms},
				"requires" = {
					action:can_create_adv_search_forms = OR,
					action:can_edit_adv_search_forms = OR,
					action:can_delete_adv_search_forms = OR,
					action:can_manage_system_search_forms = OR,
				},
				"navigation" = {
					"search_forms" = {
						"displayName" = _("Search forms"),
						"default" = { module = manage, controller = SearchForm, action = ListForms},
						"requires" = {
							action:can_set_access_control = AND	
						}
					},
					"saved_searches" = {
						"displayName" = _("Saved searches"),
						"default" = { module = manage, controller = SavedSearches, action = ListSearches},
						"requires" = {
							action:can_set_access_control = AND	
						}
					}
				}
			},
			"search_form_editor" = {
				"displayName" = _("Edit search form"),
				"hide" = 1,
				"default" = { module = manage/search_forms, controller = SearchFormEditor, action = Edit},
				"requires" = {
					
				},
				"navigation" = {
					"dynamic" = {
						"type" = dynamic,
						"handler" = { module = manage/search_forms, controller = SearchFormEditor, action = _genDynamicNav },
						"default" = { module = manage/search_forms, controller = SearchFormEditor, action = Edit },
						"requires" = {
							
						}
						"parameters" = {
							parameter:form_id = 
						}
					},
					"log" = {
						"displayName" = _("Log"),
						"default" = { module = manage/search_forms, controller = SearchFormEditor, action = Log },
						"requires" = {

							parameter:form_id = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:form_id = 
						}
					}
				}
			},
			"user_generated_content" = {
				"displayName" = _("User generated content"),
				"default" = { module = manage, controller = Comments, action = ListUnmoderated},
				"requires" = {
					action:can_manage_user_tags = OR,
					action:can_manage_user_comments = OR
				},
				"submenu" = {
					"type" = static,
					"navigation" = {
						"comments" = {
							"displayName" = _("Comments"),
							"default" = { module = manage, controller = Comments, action = ListUnmoderated},
							"requires" = {
								action:can_manage_user_comments = AND
							},
							"navigation" = {
								"moderate" = {
									"displayName" = _("Moderate"),
									"default" = { module = manage, controller = Comments, action = ListUnmoderated},
									"is_enabled" = 1,
									"requires" = {
										action:can_manage_user_comments = AND
									}
								},
								"search" = {
									"displayName" = _("Search"),
									"default" = { module = manage, controller = Comments, action = Index},
									"useActionInPath" = 1,
									"is_enabled" = 1,
									"requires" = {
										action:can_manage_user_comments = AND
									}
								}
							}
						},
						"tags" = {
							"displayName" = _("Tags"),
							"default" = { module = manage, controller = Tags, action = ListUnmoderated},
							"is_enabled" = 1,
							"requires" = {
								action:can_manage_user_tags = AND	
							},
							"navigation" = {
								"moderate" = {
									"displayName" = _("Moderate"),
									"default" = { module = manage, controller = Tags, action = ListUnmoderated},
									"is_enabled" = 1,
									"requires" = {
										action:can_manage_user_tags = AND
									}
								},
								"search" = {
									"displayName" = _("Search"),
									"default" = { module = manage, controller = Tags, action = Index},
									"useActionInPath" = 1,
									"is_enabled" = 1,
									"requires" = {
										action:can_manage_user_tags = AND
									}
								}
							}
						}
					}
				},
				"navigation" = {
					"comments" = {
						"displayName" = _("Comments"),
						"default" = { module = manage, controller = Comments, action = ListUnmoderated},
						"requires" = {
							
						},
						"navigation" = {
							"moderate" = {
								"displayName" = _("Moderate"),
								"default" = { module = manage, controller = Comments, action = ListUnmoderated},
								"is_enabled" = 1,
								"requires" = {
									
								}
							},
							"search" = {
								"displayName" = _("Search"),
								"default" = { module = manage, controller = Comments, action = Index},
								"useActionInPath" = 1,
								"is_enabled" = 1,
								"requires" = {
									
								}
							}
						}
					},
					"tags" = {
						"displayName" = _("Tags"),
						"default" = { module = manage, controller = Tags, action = ListUnmoderated},
						"is_enabled" = 1,
						"requires" = {
							
						},
						"navigation" = {
							"moderate" = {
								"displayName" = _("Moderate"),
								"default" = { module = manage, controller = Tags, action = ListUnmoderated},
								"is_enabled" = 1,
								"requires" = {
									
								}
							},
							"search" = {
								"displayName" = _("Search"),
								"default" = { module = manage, controller = Tags, action = Index},
								"useActionInPath" = 1,
								"is_enabled" = 1,
								"requires" = {
									
								}
							}
						}
					}
				}
			},
			"list_editor_menu_item" = {
				"displayName" = _("Lists & vocabularies"),
				"default" = { module = administrate/setup, controller = Lists, action = Index},
				"requires" = {
					action:can_create_ca_lists = OR,
					action:can_edit_ca_lists = OR,
					action:can_delete_ca_lists = OR,
				},
				"navigation" = {
					"search" = {
						"displayName" = _("Search"),
						"default" = { module = administrate/setup, controller = Lists, action = Index},
						"requires" = {
							
						}
					}
				}
			},
			"list_editor" = {
				"displayName" = _("Edit list"),
				"hide" = 1,
				"default" = { module = administrate/setup/list_editor, controller = ListEditor, action = Edit},
				"requires" = {
					
				},
				"navigation" = {
					"dynamic" = {
						"type" = dynamic,
						"handler" = { module = administrate/setup/list_editor, controller = ListEditor, action = _genDynamicNav },
						"default" = { module = administrate/setup/list_editor, controller = ListEditor, action = Edit },
						"requires" = {
							
						}
						"parameters" = {
							parameter:list_id = 
						}
					},
					"summary" = {
						"displayName" = _("Summary"),
						"default" = { module = administrate/setup/list_editor, controller = ListEditor, action = Summary },
						"requires" = {
							parameter:list_id = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:list_id = 
						}
					},
					"log" = {
						"displayName" = _("Log"),
						"default" = { module = administrate/setup/list_editor, controller = ListEditor, action = Log },
						"requires" = {
							
							parameter:list_id = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:list_id = 
						}
					}
				}
			},
			"list_item_editor" = {
				"displayName" = _("Edit list item"),
				"hide" = 1,
				"default" = { module = administrate/setup/list_item_editor, controller = ListItemEditor, action = Edit},
				"requires" = {
					
				},
				"breadcrumbHints" = {
					parameter:item_id = method:ca_list_items.getTypeName,
					parameter:type_id = method:ca_list_items.getLabelForDisplay,
				},
				"navigation" = {
					"dynamic" = {
						"type" = dynamic,
						"handler" = { module = administrate/setup/list_item_editor, controller = ListItemEditor, action = _genDynamicNav },
						"default" = { module = administrate/setup/list_item_editor, controller = ListItemEditor, action = Edit },
						"requires" = {
							
						}
						"parameters" = {
							parameter:item_id = 
						}
					},
					"summary" = {
						"displayName" = _("Summary"),
						"default" = { module = administrate/setup/list_item_editor, controller = ListItemEditor, action = Summary },
						"requires" = {
							parameter:item_id = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:item_id = 
						}
					},
					"log" = {
						"displayName" = _("Log"),
						"default" = { module = administrate/setup/list_item_editor, controller = ListItemEditor, action = Log },
						"requires" = {
							
							parameter:item_id = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:item_id = 
						}
					}
				}
			},
			"access_control" = {
				"displayName" = _("Access control"),
				"default" = { module = administrate/access, controller = Users, action = ListUsers},
				"requires" = {
					action:can_set_access_control = AND
				},
				"navigation" = {
					"users" = {
						"displayName" = _("User logins"),
						"default" = { module = administrate/access, controller = Users, action = ListUsers},
						"requires" = {
							action:can_set_access_control = AND	
						}
					},
					"groups" = {
						"displayName" = _("User groups"),
						"default" = { module = administrate/access, controller = Groups, action = ListGroups},
						"requires" = {
							action:can_set_access_control = AND
						}
					},
					"roles" = {
						"displayName" = _("Access roles"),
						"default" = { module = administrate/access, controller = Roles, action = ListRoles},
						"requires" = {
							action:can_set_access_control = AND
						}
					}
				}
			},
			"logs" = {
				"displayName" = _("Logs"),
				"default" = { module = logs, controller = Events, action = Index},
				"requires" = {
					action:can_view_logs = AND
				},
				"remember_last_used_navigation" = 1,
				"navigation" = {
					"events_log" = {
						"displayName" = _("Events log"),
						"default" = { module = logs, controller = Events, action = Index },
						"requires" = {
							action:can_view_logs = AND
						}
					},
					"search_log" = {
						"displayName" = _("Search log"),
						"default" = { module = logs, controller = Search, action = Index },
						"requires" = {
							action:can_view_logs = AND
						}
					}
				}
			},
			"system_config" = {
				"displayName" = _("Administration"),
				"default" = { module = administrate/setup, controller = Interfaces, action = ListUIs},
				"requires" = {
					action:can_configure_user_interfaces = OR,
					action:can_configure_metadata_elements = OR,
					action:can_configure_relationship_types = OR,
					action:can_configure_locales = OR,
					action:can_view_configuration_check = OR,
				},
				"remember_last_used_navigation" = 1,
				"navigation" = {
					"editor_uis" = {
						"displayName" = _("User interfaces"),
						"default" = { module = administrate/setup, controller = Interfaces, action = ListUIs},
						"requires" = {
							action:can_configure_user_interfaces = AND,
						}
					},
					"metadata_elements" = {
						"displayName" = _("Metadata elements"),
						"default" = { module = administrate/setup, controller = Elements, action = ListElements},
						"requires" = {
							action:can_configure_metadata_elements = AND,
						}
					},
					"relationship_types" = {
						"displayName" = _("Relationship types"),
						"default" = { module = administrate/setup, controller = RelationshipTypes, action = Index},
						"requires" = {
							action:can_configure_relationship_types = AND,
						}
					},
					"locales" = {
						"displayName" = _("Locales"),
						"default" = { module = administrate/setup, controller = Locales, action = ListLocales},
						"requires" = {
							action:can_configure_locales = AND,
						}
					},
					"configCheck" = {
						"displayName" = _("Configuration check"),
						"default" = { module = administrate/setup, controller = ConfigurationCheck, action = DoCheck},
						"requires" = {
							action:can_view_configuration_check = AND,
						}
					}
				}
			},
			"relationship_type_editor" = {
				"displayName" = _("Relationship type editor"),
				"hide" = 1,
				"default" = { module = administrate/setup/relationship_type_editor, controller = RelationshipTypeEditor, action = Edit},
				"requires" = {
					
				},
				"parameters" = {
					parameter:type_id = 
				},
				"navigation" = {
					"dynamic" = {
						"type" = dynamic,
						"handler" = { module = administrate/setup/relationship_type_editor, controller = RelationshipTypeEditor, action = _genDynamicNav },
						"default" = { module = administrate/setup/relationship_type_editor, controller = RelationshipTypeEditor, action = Edit },
						"requires" = {
							
						},
						"parameters" = {
							parameter:type_id = 
						}
					},
					"log" = {
						"displayName" = _("Log"),
						"default" = { module = administrate/setup/relationship_type_editor, controller = RelationshipTypeEditor, action = Log },
						"requires" = {
							
							parameter:type_id = AND
						},
						"useActionInPath" = 1,
						"parameters" = {
							parameter:type_id = 
						}
					}
				}
			}
		}
	}
}


#
# Sidebar info displays (aka. widgets)
#

widgets = {
# ---------------------------------
	objectInfo = {
		"domain" = { module = editor/objects, controller = ObjectEditor },
		"handler" = { module = editor/objects, controller = ObjectEditor, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:object_id = ,
			parameter:parent_id = ,
			parameter:type_id = 
		}
	},
	objectSearchTools = {
		"domain" = { module = find, controller = SearchObjects },
		"handler" = { module = find, controller = SearchObjects, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:object_id = 
		}
	},
	objectAdvSearchTools = {
		"domain" = { module = find, controller = SearchObjectsAdvanced },
		"handler" = { module = find, controller = SearchObjectsAdvanced, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:object_id = 
		}
	},
	objectBrowseTools = {
		"domain" = { module = find, controller = BrowseObjects },
		"handler" = { module = find, controller = BrowseObjects, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:object_id = 
		}
	},
# ---------------------------------	
	entityInfo = {
		"domain" = { module = editor/entities, controller = EntityEditor },
		"handler" = { module = editor/entities, controller = EntityEditor, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:entity_id = ,
			parameter:type_id = 
		}
	},
	entitySearchTools = {
		"domain" = { module = find, controller = SearchEntities },
		"handler" = { module = find, controller = SearchEntities, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:entity_id = 
		}
	},
	entityAdvSearchTools = {
		"domain" = { module = find, controller = SearchEntitiesAdvanced },
		"handler" = { module = find, controller = SearchEntitiesAdvanced, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:entity_id = 
		}
	},
	entityBrowseTools = {
		"domain" = { module = find, controller = BrowseEntities },
		"handler" = { module = find, controller = BrowseEntities, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:entity_id = 
		}
	},
# ---------------------------------	
	collectionInfo = {
		"domain" = { module = editor/collections, controller = CollectionEditor },
		"handler" = { module = editor/collections, controller = CollectionEditor, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:collection_id = ,
			parameter:type_id = 
		}
	},
	collectionSearchTools = {
		"domain" = { module = find, controller = SearchCollections },
		"handler" = { module = find, controller = SearchCollections, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:collection_id = 
		}
	},
	collectionAdvSearchTools = {
		"domain" = { module = find, controller = SearchCollectionsAdvanced },
		"handler" = { module = find, controller = SearchCollectionsAdvanced, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:collection_id = 
		}
	},
	collectionBrowseTools = {
		"domain" = { module = find, controller = BrowseCollections },
		"handler" = { module = find, controller = BrowseCollections, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:collection_id = 
		}
	},
# ---------------------------------	
	placeInfo = {
		"domain" = { module = editor/places, controller = PlaceEditor },
		"handler" = { module = editor/places, controller = PlaceEditor, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:place_id = ,
			parameter:parent_id = ,
			parameter:type_id = 
		}
	},
	placeSearchTools = {
		"domain" = { module = find, controller = SearchPlaces },
		"handler" = { module = find, controller = SearchPlaces, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:place_id = 
		}
	},
	placeAdvSearchTools = {
		"domain" = { module = find, controller = SearchPlacesAdvanced },
		"handler" = { module = find, controller = SearchPlacesAdvanced, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:place_id = 
		}
	},
	placeBrowseTools = {
		"domain" = { module = find, controller = BrowsePlaces },
		"handler" = { module = find, controller = BrowsePlaces, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:place_id = 
		}
	},
# ---------------------------------	
	occurrenceInfo = {
		"domain" = { module = editor/occurrences, controller = OccurrenceEditor },
		"handler" = { module = editor/occurrences, controller = OccurrenceEditor, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:occurrence_id = ,
			parameter:type_id = 
		}
	},
	occurrenceSearchTools = {
		"domain" = { module = find, controller = SearchOccurrences },
		"handler" = { module = find, controller = SearchOccurrences, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:occurrence_id = ,
			parameter:type_id = 
		}
	},
	occurrenceAdvSearchTools = {
		"domain" = { module = find, controller = SearchOccurrencesAdvanced },
		"handler" = { module = find, controller = SearchOccurrencesAdvanced, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:occurrence_id = ,
			parameter:type_id = 
		}
	},
	occurrenceBrowseTools = {
		"domain" = { module = find, controller = BrowseOccurrences },
		"handler" = { module = find, controller = BrowseOccurrences, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:occurrence_id = ,
			parameter:type_id = 
		}
	},
# ---------------------------------	
	objectLotInfo = {
		"domain" = { module = editor/object_lots, controller = ObjectLotEditor },
		"handler" = { module = editor/object_lots, controller = ObjectLotEditor, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:lot_id = ,
			parameter:type_id = 
		}
	},
	objectLotSearchTools = {
		"domain" = { module = find, controller = SearchObjectLots },
		"handler" = { module = find, controller = SearchObjectLots, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:lot_id = 
		}
	},
	objectLotAdvSearchTools = {
		"domain" = { module = find, controller = SearchObjectLotsAdvanced },
		"handler" = { module = find, controller = SearchObjectLotsAdvanced, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:lot_id = 
		}
	},
	objectLotBrowseTools = {
		"domain" = { module = find, controller = BrowseObjectLots },
		"handler" = { module = find, controller = BrowseObjectLots, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:lot_id = 
		}
	},
# ---------------------------------	
	storageLocationInfo = {
		"domain" = { module = editor/storage_locations, controller = StorageLocationEditor },
		"handler" = { module = editor/storage_locations, controller = StorageLocationEditor, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:location_id = ,
			parameter:parent_id = ,
			parameter:type_id = 
		}
	},
	storageLocationSearchTools = {
		"domain" = { module = find, controller = SearchStorageLocations },
		"handler" = { module = find, controller = SearchStorageLocations, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:location_id = 
		}
	},
	storageLocationAdvSearchTools = {
		"domain" = { module = find, controller = SearchStorageLocationsAdvanced },
		"handler" = { module = find, controller = SearchStorageLocationsAdvanced, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:location_id = 
		}
	},
	storageLocationBrowseTools = {
		"domain" = { module = find, controller = BrowseStorageLocations },
		"handler" = { module = find, controller = BrowseStorageLocations, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:location_id = 
		}
	},
# ---------------------------------	
	loanInfo = {
		"domain" = { module = editor/loans, controller = LoanEditor },
		"handler" = { module = editor/loans, controller = LoanEditor, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:loan_id = ,
			parameter:type_id = 
		}
	},
	loanSearchTools = {
		"domain" = { module = find, controller = SearchLoans },
		"handler" = { module = find, controller = SearchLoans, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:loan_id = 
		}
	},
	loanAdvSearchTools = {
		"domain" = { module = find, controller = SearchLoansAdvanced },
		"handler" = { module = find, controller = SearchLoansAdvanced, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:loan_id = 
		}
	},
	loanBrowseTools = {
		"domain" = { module = find, controller = BrowseLoans },
		"handler" = { module = find, controller = BrowseLoans, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:loan_id = 
		}
	},
# ---------------------------------	
	movementInfo = {
		"domain" = { module = editor/movements, controller = MovementEditor },
		"handler" = { module = editor/movements, controller = MovementEditor, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:movement_id = ,
			parameter:type_id = 
		}
	},
	movementSearchTools = {
		"domain" = { module = find, controller = SearchMovements },
		"handler" = { module = find, controller = SearchMovements, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:movement_id = 
		}
	},
	movementAdvSearchTools = {
		"domain" = { module = find, controller = SearchMovementsAdvanced },
		"handler" = { module = find, controller = SearchMovementsAdvanced, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:movement_id = 
		}
	},
	movementBrowseTools = {
		"domain" = { module = find, controller = BrowseMovements },
		"handler" = { module = find, controller = BrowseMovements, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:movement_id = 
		}
	},
# ---------------------------------
	setItemInfo = {
		"domain" = { module = manage/set_items, controller = SetItemEditor },
		"handler" = { module = manage/set_items, controller = SetItemEditor, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:item_id=
		}
	},
# ---------------------------------
	setInfo = {
		"domain" = { module = manage/sets, controller = SetEditor },
		"handler" = { module = manage/sets, controller = SetEditor, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:set_id=
		}
	},
# ---------------------------------
	setListInfo = {
		"domain" = { module = manage, controller = Set },
		"handler" = { module = manage, controller = Set, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:set_id = ,
			parameter:type_id = 
		}
	},
# ---------------------------------
	searchFormsInfo = {
		"domain" = { module = manage, controller = SearchForm },
		"handler" = { module = manage, controller = SearchForm, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:form_id = 
		}
	},
# ---------------------------------
	searchFormInfo = {
		"domain" = { module = manage/search_forms, controller = SearchFormEditor },
		"handler" = { module = manage/search_forms, controller = SearchFormEditor, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:form_id = 
		}
	},
# ---------------------------------
	bundleDisplaysInfo = {
		"domain" = { module = manage, controller = BundleDisplays },
		"handler" = { module = manage, controller = BundleDisplays, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:display_id = 
		}
	},
# ---------------------------------
	bundleDisplayInfo = {
		"domain" = { module = manage/bundle_displays, controller = BundleDisplayEditor },
		"handler" = { module = manage/bundle_displays, controller = BundleDisplayEditor, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:display_id = 
		}
	},
# ---------------------------------
	userGroupsInfo = {
		"domain" = { module = manage, controller = Groups },
		"handler" = { module = manage, controller = Groups, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:display_id = 
		}
	},
# ---------------------------------
	listInfo = {
		"domain" = { module = administrate/setup/list_editor, controller = ListEditor },
		"handler" = { module = administrate/setup/list_editor, controller = ListEditor, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:list_id =
		}
	},
# ---------------------------------
	metadataElementInfo = {
		"domain" = { module = administrate/setup, controller = Elements },
		"handler" = { module = administrate/setup, controller = Elements, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:element_id =
		}
	},
# ---------------------------------
	uiEditorInfo = {
		"domain" = { module = administrate/setup, controller = Interfaces },
		"handler" = { module = administrate/setup, controller = Interfaces, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:ui_id =
		}
	},
# ---------------------------------
	commentEditorInfo = {
		"domain" = { module = manage, controller = Comments },
		"handler" = { module = manage, controller = Comments, action = Info },
		"requires" = {
			
		},
		"parameters" = {
		
		}
	},
# ---------------------------------
	tagEditorInfo = {
		"domain" = { module = manage, controller = Tags },
		"handler" = { module = manage, controller = Tags, action = Info },
		"requires" = {
			
		},
		"parameters" = {
		
		}
	},
# ---------------------------------
	savedSearchesEditorInfo = {
		"domain" = { module = manage, controller = SavedSearches },
		"handler" = { module = manage, controller = SavedSearches, action = Info },
		"requires" = {
			
		},
		"parameters" = {
		
		}
	},
# ---------------------------------
	watchedItemsEditorInfo = {
		"domain" = { module = manage, controller = WatchedItems },
		"handler" = { module = manage, controller = WatchedItems, action = Info },
		"requires" = {
			
		},
		"parameters" = {
		
		}
	},
# ---------------------------------
	listItemInfo = {
		"domain" = { module = administrate/setup/list_item_editor, controller = ListItemEditor },
		"handler" = { module = administrate/setup/list_item_editor, controller = ListItemEditor, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:item_id=,
			parameter:type_id = ,
			parameter:parent_id = 
		}
	},
	listItemSearchTools = {
		"domain" = { module = administrate/setup, controller = Lists },
		"handler" = { module = administrate/setup, controller = Lists, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:item_id = 
		}
	},
# ---------------------------------
	relationshipTypeInfo = {
		"domain" = { module = administrate/setup/relationship_type_editor, controller = RelationshipTypeEditor },
		"handler" = { module = administrate/setup/relationship_type_editor, controller = RelationshipTypeEditor, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:type_id = ,
			parameter:parent_id = 
		}
	},
	relationshipTypeSearchTools = {
		"domain" = { module = administrate/setup, controller = RelationshipTypes },
		"handler" = { module = administrate/setup, controller = RelationshipTypes, action = Tools },
		"requires" = {
			
		},
		"parameters" = {
			parameter:type_id = 
		}
	},	
# ---------------------------------	
	objectRepresentationInfo = {
		"domain" = { module = editor/object_representations, controller = ObjectRepresentationEditor },
		"handler" = { module = editor/object_representations, controller = ObjectRepresentationEditor, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:representation_id = 
		}
	},
# ---------------------------------	
	representationAnnotationInfo = {
		"domain" = { module = editor/representation_annotations, controller = RepresentationAnnotationEditor },
		"handler" = { module = editor/representation_annotations, controller = RepresentationAnnotationEditor, action = Info },
		"requires" = {
			
		},
		"parameters" = {
			parameter:annotation_id = 
		}
	}
# ---------------------------------	
}